name: tests
on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-latest
          - macos-latest
          # - windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.1

      - name: Install Go
        uses: actions/setup-go@v5.0.2
        with:
          go-version: 1.21.6

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v4.0.2
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: test-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            test-${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download && go mod tidy

      - name: Run tests
        run: go test --timeout 5m ./...

      - name: Run tests with race
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        run: go test --timeout 5m --race ./...